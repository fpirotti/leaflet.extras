{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/leaflet.CanvasMarker/src/plugin/leaflet.canvas-markers.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","L","CanvasIconLayer","Layer","Class","extend","initialize","options","setOptions","this","_onClickListeners","_onHoverListeners","redraw","_redraw","addMarkers","markers","self","tmpMark","tmpLatLng","forEach","marker","pane","icon","latlng","getLatLng","isDisplaying","_map","getBounds","contains","_addMarker","push","console","error","_markers","load","_latlngMarkers","addMarker","dat","insert","addLayer","layer","addLayers","layers","removeLayer","removeMarker","data","markerData","minX","lng","minY","lat","maxX","maxY","remove","a","b","_leaflet_id","total","dirty","onAdd","map","_canvas","_initCanvas","getPane","appendChild","_panes","overlayPane","on","_reset","_executeListeners","onRemove","removeChild","getPanes","off","addTo","clearLayers","rbush","Util","stamp","pointPos","latLngToContainerPoint","iconSize","adj_x","adj_y","ret","x","y","_drawMarker","_imageLookup","iconUrl","canvas_img","_drawImage","Image","src","onload","e","_context","drawImage","iconAnchor","topLeft","containerPointToLayerPoint","DomUtil","setPosition","size","getSize","width","height","clear","clearRect","tmp","all","mapBounds","mapBoxCoords","getWest","getSouth","getEast","getNorth","search","newCoords","create","originProp","testProp","style","getContext","animated","zoomAnimation","Browser","any3d","addClass","addOnClickListener","listener","addOnHoverListener","event","me","containerPoint","_openToolTip","closeTooltip","length","_container","cursor","type","getPopup","openPopup","getTooltip","openTooltip","canvasIconLayer"],"mappings":"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","file":"lfx-canvasmarker-prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\nfunction layerFactory(L) {\n\n    var CanvasIconLayer = (L.Layer ? L.Layer : L.Class).extend({\n\n        //Add event listeners to initialized section.\n        initialize: function (options) {\n\n            L.setOptions(this, options);\n            this._onClickListeners = [];\n            this._onHoverListeners = [];\n        },\n\n        setOptions: function (options) {\n\n            L.setOptions(this, options);\n            return this.redraw();\n        },\n\n        redraw: function () {\n\n            this._redraw(true);\n        },\n\n        //Multiple layers at a time for rBush performance\n        addMarkers: function (markers) {\n\n            var self = this;\n            var tmpMark = [];\n            var tmpLatLng = [];\n\n            markers.forEach(function (marker) {\n\n                if (!((marker.options.pane == 'markerPane') && marker.options.icon))\n                {\n                    console.error('Layer isn\\'t a marker');\n                    return;\n                }\n\n                var latlng = marker.getLatLng();\n                var isDisplaying = self._map.getBounds().contains(latlng);\n                var s = self._addMarker(marker,latlng,isDisplaying);\n\n                //Only add to Point Lookup if we are on map\n                if (isDisplaying ===true) tmpMark.push(s[0]);\n\n                tmpLatLng.push(s[1]);\n            });\n\n            self._markers.load(tmpMark);\n            self._latlngMarkers.load(tmpLatLng);\n        },\n\n        //Adds single layer at a time. Less efficient for rBush\n        addMarker: function (marker) {\n\n            var self = this;\n            var latlng = marker.getLatLng();\n            var isDisplaying = self._map.getBounds().contains(latlng);\n            var dat = self._addMarker(marker,latlng,isDisplaying);\n\n            //Only add to Point Lookup if we are on map\n            if(isDisplaying ===true) self._markers.insert(dat[0]);\n\n            self._latlngMarkers.insert(dat[1]);\n        },\n\n        addLayer: function (layer) {\n\n            if ((layer.options.pane == 'markerPane') && layer.options.icon) this.addMarker(layer);\n            else console.error('Layer isn\\'t a marker');\n        },\n\n        addLayers: function (layers) {\n\n            this.addMarkers(layers);\n        },\n\n        removeLayer: function (layer) {\n\n            this.removeMarker(layer,true);\n        },\n\n        removeMarker: function (marker,redraw) {\n\n            var self = this;\n\n            //If we are removed point\n            if(marker[\"minX\"]) marker = marker.data;\n\n            var latlng = marker.getLatLng();\n            var isDisplaying = self._map.getBounds().contains(latlng);\n\n            var markerData = {\n\n                minX: latlng.lng,\n                minY: latlng.lat,\n                maxX: latlng.lng,\n                maxY: latlng.lat,\n                data: marker\n            };\n\n            self._latlngMarkers.remove(markerData, function (a,b) {\n\n                return a.data._leaflet_id ===b.data._leaflet_id;\n            });\n\n            self._latlngMarkers.total--;\n            self._latlngMarkers.dirty++;\n\n            if(isDisplaying ===true && redraw ===true) {\n\n                self._redraw(true);\n            }\n        },\n\n        onAdd: function (map) {\n\n            this._map = map;\n\n            if (!this._canvas) this._initCanvas();\n\n            if (this.options.pane) this.getPane().appendChild(this._canvas);\n            else map._panes.overlayPane.appendChild(this._canvas);\n\n            map.on('moveend', this._reset, this);\n            map.on('resize',this._reset,this);\n\n            map.on('click', this._executeListeners, this);\n            map.on('mousemove', this._executeListeners, this);\n        },\n\n        onRemove: function (map) {\n\n            if (this.options.pane) this.getPane().removeChild(this._canvas);\n            else map.getPanes().overlayPane.removeChild(this._canvas);\n\n            map.off('click', this._executeListeners, this);\n            map.off('mousemove', this._executeListeners, this);\n\n            map.off('moveend', this._reset, this);\n            map.off('resize',this._reset,this);\n        },\n\n        addTo: function (map) {\n\n            map.addLayer(this);\n            return this;\n        },\n\n        clearLayers: function() {\n\n            this._latlngMarkers = null;\n            this._markers = null;\n            this._redraw(true);\n        },\n\n        _addMarker: function(marker,latlng,isDisplaying) {\n\n            var self = this;\n            //Needed for pop-up & tooltip to work.\n            marker._map = self._map;\n\n            //_markers contains Points of markers currently displaying on map\n            if (!self._markers) self._markers = new rbush();\n\n            //_latlngMarkers contains Lat\\Long coordinates of all markers in layer.\n            if (!self._latlngMarkers) {\n                self._latlngMarkers = new rbush();\n                self._latlngMarkers.dirty=0;\n                self._latlngMarkers.total=0;\n            }\n\n            L.Util.stamp(marker);\n\n            var pointPos = self._map.latLngToContainerPoint(latlng);\n            var iconSize = marker.options.icon.options.iconSize;\n\n            var adj_x = iconSize[0]/2;\n            var adj_y = iconSize[1]/2;\n            var ret = [({\n                minX: (pointPos.x - adj_x),\n                minY: (pointPos.y - adj_y),\n                maxX: (pointPos.x + adj_x),\n                maxY: (pointPos.y + adj_y),\n                data: marker\n            }),({\n                minX: latlng.lng,\n                minY: latlng.lat,\n                maxX: latlng.lng,\n                maxY: latlng.lat,\n                data: marker\n            })];\n\n            self._latlngMarkers.dirty++;\n            self._latlngMarkers.total++;\n\n            //Only draw if we are on map\n            if(isDisplaying===true) self._drawMarker(marker, pointPos);\n\n            return ret;\n        },\n\n        _drawMarker: function (marker, pointPos) {\n\n            var self = this;\n\n            if (!this._imageLookup) this._imageLookup = {};\n            if (!pointPos) {\n\n                pointPos = self._map.latLngToContainerPoint(marker.getLatLng());\n            }\n\n            var iconUrl = marker.options.icon.options.iconUrl;\n\n            if (marker.canvas_img) {\n\n                self._drawImage(marker, pointPos);\n            }\n            else {\n\n                if(self._imageLookup[iconUrl]) {\n\n                    marker.canvas_img = self._imageLookup[iconUrl][0];\n\n                    if (self._imageLookup[iconUrl][1] ===false) {\n\n                        self._imageLookup[iconUrl][2].push([marker,pointPos]);\n                    }\n                    else {\n\n                        self._drawImage(marker,pointPos);\n                    }\n                }\n                else {\n\n                    var i = new Image();\n                    i.src = iconUrl;\n                    marker.canvas_img = i;\n\n                    //Image,isLoaded,marker\\pointPos ref\n                    self._imageLookup[iconUrl] = [i, false, [[marker, pointPos]]];\n\n                    i.onload = function() {\n\n                        self._imageLookup[iconUrl][1] = true;\n                        self._imageLookup[iconUrl][2].forEach(function (e) {\n\n                            self._drawImage(e[0],e[1]);\n                        });\n                    }\n                }\n            }\n        },\n\n        _drawImage: function (marker, pointPos) {\n\n            var options = marker.options.icon.options;\n\n            this._context.drawImage(\n                marker.canvas_img,\n                pointPos.x - options.iconAnchor[0],\n                pointPos.y - options.iconAnchor[1],\n                options.iconSize[0],\n                options.iconSize[1]\n            );\n        },\n\n        _reset: function () {\n\n            var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n            L.DomUtil.setPosition(this._canvas, topLeft);\n\n            var size = this._map.getSize();\n\n            this._canvas.width = size.x;\n            this._canvas.height = size.y;\n\n            this._redraw();\n        },\n\n        _redraw: function (clear) {\n\n            var self = this;\n\n            if (clear) this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\n            if (!this._map || !this._latlngMarkers) return;\n\n            var tmp = [];\n\n            //If we are 10% individual inserts\\removals, reconstruct lookup for efficiency\n            if (self._latlngMarkers.dirty/self._latlngMarkers.total >= .1) {\n\n                self._latlngMarkers.all().forEach(function(e) {\n\n                    tmp.push(e);\n                });\n\n                self._latlngMarkers.clear();\n                self._latlngMarkers.load(tmp);\n                self._latlngMarkers.dirty=0;\n                tmp = [];\n            }\n\n            var mapBounds = self._map.getBounds();\n\n            //Only re-draw what we are showing on the map.\n\n            var mapBoxCoords = {\n\n                minX: mapBounds.getWest(),\n                minY: mapBounds.getSouth(),\n                maxX: mapBounds.getEast(),\n                maxY: mapBounds.getNorth(),\n            };\n\n            self._latlngMarkers.search(mapBoxCoords).forEach(function (e) {\n\n                //Readjust Point Map\n                var pointPos = self._map.latLngToContainerPoint(e.data.getLatLng());\n\n                var iconSize = e.data.options.icon.options.iconSize;\n                var adj_x = iconSize[0]/2;\n                var adj_y = iconSize[1]/2;\n\n                var newCoords = {\n                    minX: (pointPos.x - adj_x),\n                    minY: (pointPos.y - adj_y),\n                    maxX: (pointPos.x + adj_x),\n                    maxY: (pointPos.y + adj_y),\n                    data: e.data\n                }\n\n                tmp.push(newCoords);\n\n                //Redraw points\n                self._drawMarker(e.data, pointPos);\n            });\n\n            //Clear rBush & Bulk Load for performance\n            this._markers.clear();\n            this._markers.load(tmp);\n        },\n\n        _initCanvas: function () {\n\n            this._canvas = L.DomUtil.create('canvas', 'leaflet-canvas-icon-layer leaflet-layer');\n            var originProp = L.DomUtil.testProp(['transformOrigin', 'WebkitTransformOrigin', 'msTransformOrigin']);\n            this._canvas.style[originProp] = '50% 50%';\n\n            var size = this._map.getSize();\n            this._canvas.width = size.x;\n            this._canvas.height = size.y;\n\n            this._context = this._canvas.getContext('2d');\n\n            var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n            L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n        },\n\n        addOnClickListener: function (listener) {\n            this._onClickListeners.push(listener);\n        },\n\n        addOnHoverListener: function (listener) {\n            this._onHoverListeners.push(listener);\n        },\n\n        _executeListeners: function (event) {\n\n            if (!this._markers) return;\n\n            var me = this;\n            var x = event.containerPoint.x;\n            var y = event.containerPoint.y;\n\n            if(me._openToolTip) {\n\n                me._openToolTip.closeTooltip();\n                delete me._openToolTip;\n            }\n\n            var ret = this._markers.search({ minX: x, minY: y, maxX: x, maxY: y });\n\n            if (ret && ret.length > 0) {\n\n                me._map._container.style.cursor=\"pointer\";\n\n                if (event.type===\"click\") {\n\n                    var hasPopup = ret[0].data.getPopup();\n                    if(hasPopup) ret[0].data.openPopup();\n\n                    me._onClickListeners.forEach(function (listener) { listener(event, ret); });\n                }\n\n                if (event.type===\"mousemove\") {\n                    var hasTooltip = ret[0].data.getTooltip();\n                    if(hasTooltip) {\n                        me._openToolTip = ret[0].data;\n                        ret[0].data.openTooltip();\n                    }\n\n                    me._onHoverListeners.forEach(function (listener) { listener(event, ret); });\n                }\n            }\n            else {\n\n                me._map._container.style.cursor=\"\";\n            }\n        }\n    });\n\n    L.canvasIconLayer = function (options) {\n        return new CanvasIconLayer(options);\n    };\n};\n\nmodule.exports = layerFactory;\n"],"sourceRoot":""}